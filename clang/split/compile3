#!/usr/bin/sh

# works with clang 16.0.6

# compile in the fewest number of steps. This is the slowest way to compile
# because you cannot reuse any compiled translation units.
# (there may be way to do it in fewer steps, but I don't know about it)

# precompile the header libraries, the output file names are generated
# automatically
clang++ -c -std=c++20 -xc++-system-header --precompile iostream string

# precompile the modules
clang++ -c -std=c++20 -fprebuilt-module-path=. -fmodule-file=string.pcm --precompile greet.cppm -o greet.pcm

# compile everything at once
clang++ -std=c++20 -fprebuilt-module-path=. -fmodule-file=string.pcm -fmodule-file=iostream.pcm greet.pcm greet-impl.cpp main.cpp -o main
